import os
import json
import re
import mysql.connector

def find_github_commit_references(text):
    github_commit_references = []

    # Regex for GitHub commit URLs
    commit_regex = re.compile(r'https://github\.com/[^/]+/[^/]+/commit/[a-fA-F\d]+')

    # Find all GitHub commit URLs in the text using REGEX
    github_commit_references = re.findall(commit_regex, text)

    return github_commit_references

def link_exists_in_database(cursor, link):
    cursor.execute('SELECT COUNT(*) FROM github_links WHERE link = %s', (link,))
    count = cursor.fetchone()[0]
    return count > 0

def search_and_store_links(root_folder, vcs_platform):
    # Connect to MySQL database
    conn = mysql.connector.connect(
        host='localhost',
        user='root',
        password='password',
        database='db_commits'
    )
    cursor = conn.cursor()

    for root, dirs, files in os.walk(root_folder):
        for file in files:
            if file.endswith('.json') and file.startswith('CVE-'):
                file_path = os.path.join(root, file)
                print(f"Processing file: {file_path}")

                # Added support to UTF-8 encoding
                with open(file_path, 'r', encoding='utf-8') as json_file:
                    try:
                        cve_data = json.load(json_file)
                        references = cve_data.get('containers', {}).get('cna', {}).get('references', [])

                        for reference in references:
                            if 'url' in reference:
                                url = reference['url']
                                github_commit_references = find_github_commit_references(url)
                                if github_commit_references and vcs_platform.lower() in url.lower():
                                    print(f"Found in {file_path}: {url}")

                                    # Check if link already exists in database
                                    if not link_exists_in_database(cursor, url):
                                        # Insert link into database
                                        cursor.execute('INSERT INTO github_links (link) VALUES (%s)', (url,))
                                        conn.commit()

                    except json.JSONDecodeError:
                        print(f"Error decoding JSON in {file_path}")

    cursor.close()
    conn.close()

# Example usage (Change base_folder)
base_folder = 'C:/Users/Rojhat - main/PycharmProjects/bachelor-project'
cve_folder = os.path.join(base_folder, 'cves')
vcs_platform_to_search = 'github'

search_and_store_links(cve_folder, vcs_platform_to_search)
